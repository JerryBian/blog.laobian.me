<div id="log_page">
    <ul class="nav justify-content-center" id="types">
        <li class="nav-item">
            <a class="nav-link active" id="all_logs" href="#" onclick="select(this); return false;">All</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="info_logs" href="#" onclick="select(this); return false;">Information</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="warn_logs" href="#" onclick="select(this); return false;">Warning</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="error_logs" href="#" onclick="select(this); return false;">Error</a>
        </li>
    </ul>

    <section id="log_window">
        <ul id="log_items"></ul>
    </section>

</div>


@section style{
    <link rel="stylesheet"
          href="~/style/admin.min.css"
          asp-fallback-href="https://jerrybian.github.io/blog.laobian.me/style/admin.min.css"
          asp-fallback-test-class="sr-only"
          asp-fallback-test-property="position"
          asp-fallback-test-value="absolute"
          asp-append-version="true" />
}

@section script{
    <script src="~/script/admin.min.js"
            asp-fallback-src="https://jerrybian.github.io/blog.laobian.me/script/admin.min.js"
            asp-fallback-test="window.test"
            asp-append-version="true">
    </script>

    <script>
        let connection;
        let subscribe;
        const ul = document.querySelector('#log_items');

        function stream(type) {
            subscribe = connection.stream('Get', type)
                .subscribe({
                    next: (item) => {
                        console.log(item);
                        
                        item.forEach(i => {
                            let li = document.createElement('li');
                            li.innerHTML = `[${i.when}]\t${i.message}`;
                            if (i.exception) {
                                li.innerHTML += `<br />${i.exception}`;
                            }

                            ul.prepend(li);
                        });

                    },
                    complete: () => {
                        console.log('complete');
                    },
                    error: (err) => {
                        console.log(err);
                    }
                });
        }

        async function start(type) {
            connection = new signalR.HubConnectionBuilder()
                .withUrl('/hub/log')
                .withAutomaticReconnect()
                .configureLogging(signalR.LogLevel.Information)
                .build();

            connection.onclose(() => {
                console.log('connection closed');
            });

            connection.onreconnecting(error => {
                console.log(`Connection lost due to error "${error}". Reconnecting.`);
            });

            connection.onreconnected(connectionId => {
                stream(type);
            });

            try {
                await connection.start();
                console.log("connected");

                ul.innerHTML = '';
                stream(type);
            } catch (err) {
                console.log(err);
            }
        }


        function selectType(type) {
            let ele = document.querySelector('#types');
            if (ele) {
                let children = [...ele.children];
                children.forEach(function(li) {
                    let child = li.querySelector('a');
                    child.classList.remove('active');

                    if (child.id === type) {
                        child.classList.add('active');
                    }
                });
            }
        }

        function select(ele) {
            selectType(ele.id);

            if (subscribe) {
                subscribe.dispose();
            }

            if (connection) {
                connection.stop();
            }

            start(ele.id);
        }

        document.addEventListener("DOMContentLoaded",
            function() {
                select(document.querySelector('#all_logs'));
            });
    </script>
}