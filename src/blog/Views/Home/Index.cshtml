@model PagedPostViewModel

<div>
    <div class="list-group list-group-flush">
        @foreach (var item in Model.Posts)
        {
        <div class="list-group-item flex-column align-items-start post-item">
            <div>
                <div class="mb-1 post-item-title">
                    <i class="fas fa-angle-down"></i>
                    @{
                        if (!item.Post.IsPublic)
                        {
                            <span class="badge badge-secondary">Private</span>
                        }

                        if (item.Post.IsTopping)
                        {
                            <span class="badge badge-success">Top</span>
                        }
                    }
                    <a href="@item.Post.FullUrl">@item.Post.Title</a>
                </div>
            </div>
            <div class="container-fluid mt-1 mb-1">
                <div class="row">
                    <div class="mb-2 mt-1 post-item-excerpt">
                        @Html.Raw(item.Post.ExcerptHtml)
                    </div>
                </div>
            </div>
            <div class="text-muted d-none d-sm-block post-item-meta">@Html.Raw(item.GetMetadataHtml())</div>
            <div class="text-muted d-sm-none post-item-meta">@Html.Raw(item.GetSimpleMetadataHtml())</div>
        </div>
        }
    </div>

    <pagination total-pages="@Model.TotalPages" current-page="@Model.CurrentPage" url="@Model.Url"></pagination>

</div>


@section style{
    <link rel="stylesheet" href="~/style/index.min.css" asp-append-version="true" />
}

@section script{
    <script src="~/script/index.min.js" defer asp-append-version="true"></script>
}